What happens when you initialize a repository?
 - a .git folder gets created, with git's supporting files in it
Why do you need to do it?
 - Need it to use Git fully

How is the staging area different from the working directory and the repository?
 - staging is a the pre-repository, where you can add before you fully commit
What value do you think it offers?
 - allows you to add/remove before fully commit

How can you use the staging area to make sure you have one commit per logical change?
 - use a temporary "scratch pad" before deciding which are the logical change group of files

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
 - Testing, tweaking out functionality
 - Reverting before tweaking functionality
 - bug fixes

How do the diagrams help you visualize the branch structure?
 - see the relationships in a linear picture

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
 - Additions are added so only have one branch to deal with
 - So we can see that previous commits are still there ... they are just not in the merged branch you are now working on